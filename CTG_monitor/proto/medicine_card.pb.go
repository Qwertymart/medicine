// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: medicine_card.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос для сохранения сессии КТГ
type CTGSessionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SessionId       string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                    // UUID сессии
	CardId          string                 `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`                             // UUID медицинской карты
	DeviceId        string                 `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                       // ID устройства
	StartTime       int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                   // Unix timestamp начала
	EndTime         int64                  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                         // Unix timestamp окончания
	DurationSeconds int32                  `protobuf:"varint,6,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"` // Продолжительность в секундах
	FhrData         []*CTGDataPoint        `protobuf:"bytes,7,rep,name=fhr_data,json=fhrData,proto3" json:"fhr_data,omitempty"`                          // Данные FHR
	UcData          []*CTGDataPoint        `protobuf:"bytes,8,rep,name=uc_data,json=ucData,proto3" json:"uc_data,omitempty"`                             // Данные UC
	TotalFhrPoints  int32                  `protobuf:"varint,9,opt,name=total_fhr_points,json=totalFhrPoints,proto3" json:"total_fhr_points,omitempty"`  // Общее количество FHR точек
	TotalUcPoints   int32                  `protobuf:"varint,10,opt,name=total_uc_points,json=totalUcPoints,proto3" json:"total_uc_points,omitempty"`    // Общее количество UC точек
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CTGSessionRequest) Reset() {
	*x = CTGSessionRequest{}
	mi := &file_medicine_card_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CTGSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CTGSessionRequest) ProtoMessage() {}

func (x *CTGSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medicine_card_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CTGSessionRequest.ProtoReflect.Descriptor instead.
func (*CTGSessionRequest) Descriptor() ([]byte, []int) {
	return file_medicine_card_proto_rawDescGZIP(), []int{0}
}

func (x *CTGSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CTGSessionRequest) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *CTGSessionRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CTGSessionRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CTGSessionRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CTGSessionRequest) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *CTGSessionRequest) GetFhrData() []*CTGDataPoint {
	if x != nil {
		return x.FhrData
	}
	return nil
}

func (x *CTGSessionRequest) GetUcData() []*CTGDataPoint {
	if x != nil {
		return x.UcData
	}
	return nil
}

func (x *CTGSessionRequest) GetTotalFhrPoints() int32 {
	if x != nil {
		return x.TotalFhrPoints
	}
	return 0
}

func (x *CTGSessionRequest) GetTotalUcPoints() int32 {
	if x != nil {
		return x.TotalUcPoints
	}
	return 0
}

// Точка данных КТГ
type CTGDataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeSec       float64                `protobuf:"fixed64,1,opt,name=time_sec,json=timeSec,proto3" json:"time_sec,omitempty"` // Время в секундах от начала сессии
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`                    // Значение (FHR или UC)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CTGDataPoint) Reset() {
	*x = CTGDataPoint{}
	mi := &file_medicine_card_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CTGDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CTGDataPoint) ProtoMessage() {}

func (x *CTGDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_medicine_card_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CTGDataPoint.ProtoReflect.Descriptor instead.
func (*CTGDataPoint) Descriptor() ([]byte, []int) {
	return file_medicine_card_proto_rawDescGZIP(), []int{1}
}

func (x *CTGDataPoint) GetTimeSec() float64 {
	if x != nil {
		return x.TimeSec
	}
	return 0
}

func (x *CTGDataPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Ответ на сохранение сессии
type SaveSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                  // Успешность операции
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                   // Сообщение об ошибке/успехе
	RecordId      string                 `protobuf:"bytes,3,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"` // ID созданной записи в медкартах
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveSessionResponse) Reset() {
	*x = SaveSessionResponse{}
	mi := &file_medicine_card_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSessionResponse) ProtoMessage() {}

func (x *SaveSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_medicine_card_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSessionResponse.ProtoReflect.Descriptor instead.
func (*SaveSessionResponse) Descriptor() ([]byte, []int) {
	return file_medicine_card_proto_rawDescGZIP(), []int{2}
}

func (x *SaveSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SaveSessionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SaveSessionResponse) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

var File_medicine_card_proto protoreflect.FileDescriptor

const file_medicine_card_proto_rawDesc = "" +
	"\n" +
	"\x13medicine_card.proto\x12\x0fmedical_records\"\x91\x03\n" +
	"\x11CTGSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\acard_id\x18\x02 \x01(\tR\x06cardId\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\x03R\aendTime\x12)\n" +
	"\x10duration_seconds\x18\x06 \x01(\x05R\x0fdurationSeconds\x128\n" +
	"\bfhr_data\x18\a \x03(\v2\x1d.medical_records.CTGDataPointR\afhrData\x126\n" +
	"\auc_data\x18\b \x03(\v2\x1d.medical_records.CTGDataPointR\x06ucData\x12(\n" +
	"\x10total_fhr_points\x18\t \x01(\x05R\x0etotalFhrPoints\x12&\n" +
	"\x0ftotal_uc_points\x18\n" +
	" \x01(\x05R\rtotalUcPoints\"?\n" +
	"\fCTGDataPoint\x12\x19\n" +
	"\btime_sec\x18\x01 \x01(\x01R\atimeSec\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\"f\n" +
	"\x13SaveSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\trecord_id\x18\x03 \x01(\tR\brecordId2s\n" +
	"\x15MedicalRecordsService\x12Z\n" +
	"\x0eSaveCTGSession\x12\".medical_records.CTGSessionRequest\x1a$.medical_records.SaveSessionResponseB\x1bZ\x19CTG_monitor/proto/medicalb\x06proto3"

var (
	file_medicine_card_proto_rawDescOnce sync.Once
	file_medicine_card_proto_rawDescData []byte
)

func file_medicine_card_proto_rawDescGZIP() []byte {
	file_medicine_card_proto_rawDescOnce.Do(func() {
		file_medicine_card_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_medicine_card_proto_rawDesc), len(file_medicine_card_proto_rawDesc)))
	})
	return file_medicine_card_proto_rawDescData
}

var file_medicine_card_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_medicine_card_proto_goTypes = []any{
	(*CTGSessionRequest)(nil),   // 0: medical_records.CTGSessionRequest
	(*CTGDataPoint)(nil),        // 1: medical_records.CTGDataPoint
	(*SaveSessionResponse)(nil), // 2: medical_records.SaveSessionResponse
}
var file_medicine_card_proto_depIdxs = []int32{
	1, // 0: medical_records.CTGSessionRequest.fhr_data:type_name -> medical_records.CTGDataPoint
	1, // 1: medical_records.CTGSessionRequest.uc_data:type_name -> medical_records.CTGDataPoint
	0, // 2: medical_records.MedicalRecordsService.SaveCTGSession:input_type -> medical_records.CTGSessionRequest
	2, // 3: medical_records.MedicalRecordsService.SaveCTGSession:output_type -> medical_records.SaveSessionResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_medicine_card_proto_init() }
func file_medicine_card_proto_init() {
	if File_medicine_card_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_medicine_card_proto_rawDesc), len(file_medicine_card_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_medicine_card_proto_goTypes,
		DependencyIndexes: file_medicine_card_proto_depIdxs,
		MessageInfos:      file_medicine_card_proto_msgTypes,
	}.Build()
	File_medicine_card_proto = out.File
	file_medicine_card_proto_goTypes = nil
	file_medicine_card_proto_depIdxs = nil
}
